resources:
  - name: maven_project
    type: GitRepo
    configuration:
      gitProvider: vijay_github
      path: vijayreddy1991/docker
      sha: maven   
      
  - name: maven_Build
    type: BuildInfo
    configuration:
      sourceArtifactory: vijay_artifactory
      buildNumber: 1
      buildName: mvntest
      
  - name: maven_build_promote
    type: BuildInfo
    configuration:
      sourceArtifactory: vijay_artifactory
      buildNumber: 1
      buildName: mvntest   
      
  - name: maven_release_Bundle
    type: ReleaseBundle
    configuration:
      sourceArtifactory: vijay_artifactory
      name: testmvn
      version: v0.1      
      
  - name: maven_release_BundleSig
    type: ReleaseBundle
    configuration:
      sourceArtifactory: vijay_artifactory
      name: mvntest
      version: v0.2
      isSigned: false      

pipelines:
  - name: maven_pipeline
    steps:
      - name: mavenBuild
        type: MvnBuild
        configuration:
          sourceLocation: ./artifactory-maven-plugin-example
          mvnCommand: clean install -f ./pom.xml
          configFileLocation: .
          configFileName: mvn-art-config
          inputResources:
            - name: maven_project
          integrations:
            - name: vijay_artifactory
          runtime:            
            type: image
            image:
              custom:
                name: drydock/u18java
                tag: master
                options: ""
        execution:
          onStart:
            - printenv
#            - pushd $res_maven_project_resourcePath
            - ls -la
            - apt install default-jdk
            - pushd /tmp 
            - wget http://mirrors.estointernet.in/apache/maven/maven-3/3.6.1/binaries/apache-maven-3.6.1-bin.tar.gz
            - tar xzvf apache-maven-3.6.1-bin.tar.gz
            - 'export PATH=$PATH:/tmp/apache-maven-3.6.1/bin'
            - export M2_HOME=/tmp/apache-maven-3.6.1/
            - popd
            - java -version
            - mvn --version
          onSuccess:
            - echo "sucess"

      - name: mavenpublish
        type: PublishBuildInfo
        configuration:
          inputSteps:
            - name: mavenBuild
          outputResources:
            - name: maven_Build
        execution:
          onSuccess:
            - echo "print"
            
      - name: mavenPromote
        type: PromoteBuild
        configuration:
          targetRepository: test-maven-local
          inputResources:
            - name: mvn_Build
          outputResources:
            - name: maven_build_promote
            
      - name: mavenCreatebundle
        type: CreateReleaseBundle
        configuration:
          releaseBundleName: mvnbundle
          releaseBundleVersion: v1.1.1
          dryRun: false
          sign: false
          description: "test mvn description"
          inputResources:
            - name: maven_build_promote
          outputResources:
            - name: maven_release_Bundle
          releaseNotes:
            syntax: markdown
            content: |
              ## Heading
                * Bullet
                * Points
                
      - name: mavenSign
        type: SignReleaseBundle
        configuration:
          inputResources:
            - name: maven_release_Bundle
          outputResources:
            - name: maven_release_BundleSig             
