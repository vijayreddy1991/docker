resources:
  - name: dockerbuild
    type: GitRepo
    configuration:
      path: vijayreddy1991/docker
      gitProvider: vijay_github
#       branches:
#         include: docker
      buildOn:
         commit: false
      sha: master
      
  - name: docker_Build
    type: BuildInfo
    configuration:
      sourceArtifactory: art
      buildNumber: 1
      buildName: dockertest  
      
  - name: docker_build_promote
    type: BuildInfo
    configuration:
      sourceArtifactory: art
      buildNumber: 1
      buildName: dockertest
      
  - name: docker_release_Bundle
    type: ReleaseBundle
    configuration:
      sourceDistribution: dist
      name: test-docker-local
      version: v1.0  
      
  - name: docker_release_Bundle2
    type: ReleaseBundle
    configuration:
      sourceDistribution: dist
      name: test-docker-local
      version: v1.0
      isSigned: false     

  - name: docker_distribution
    type: DistributionRule
    configuration:
      sourceDistribution: dist
      cityName: "*"
      serviceName: "*"
      siteName: "*"
      countryCodes:
        - IN

pipelines: 
  - name: docker
    steps:
      - name: dockerBuild
        type: DockerBuild
        configuration:
          nodePool: ubuntu16
          # for docker:
          dockerFileLocation: . # required
          dockerFileName: Dockerfile     # required
          dockerImageName: 34.66.107.45/test-docker-local/vijay  # required 
          dockerImageTag: latest #myimage_$pipeline_name.$run_number   # required
          integrations:
            - name: art
          inputResources:
            - name: dockerbuild    # required
#             - artifactoryFileSpec      # optional
#             - my_docker_image      # optional if base image is private
        execution:
          onStart:
            - echo "hi"
            - docker images 
            - printenv
            - ls -la
            - pushd $res_dockerbuild_resourcePath
            - ls -la
          onSuccess:
            - docker images  

      - name: dockerPush
        type: DockerPush
        configuration:
          nodePool: ubuntu16
          targetRepository: test-docker-local  #required
          integrations:
            - name: art    # required
          inputSteps:
            - name: dockerBuild     # required
#           outputResources:
#             - name: docker_Buildinfo      # required if autoPublishBuildInfo is true 

#for this DockerPush step it will pushs to artifactory directly without using PublishBuildInfo 
            
      - name: dockerPublish
        type: PublishBuildInfo
        configuration:
          nodePool: ubuntu16
          #inherits from bash
#           integrations:
#             - name: vijay_artifactory     # required
          inputSteps:
            - name: dockerPush     # required
          outputResources:
            - name: docker_Build  
            
      - name: dockerPromote
        type: PromoteBuild
        configuration:
          nodePool: ubuntu16
          targetRepository: test-docker-local
          inputResources:
            - name: docker_Build
          outputResources:
            - name: docker_build_promote
            
      - name: dockerCreatebundle
        type: CreateReleaseBundle
        configuration:
          nodePool: ubuntu16
          releaseBundleName: test-docker-local
          releaseBundleVersion: v2.0.20
          dryRun: false
          sign: false
          description: "testdocker description"
          inputResources:
            - name: docker_build_promote
          outputResources:
            - name: docker_release_Bundle
          releaseNotes:
            syntax: markdown
            content: |
              ## Heading
                * Bullet
                * Points       
                 
      - name: dockerSign
        type: SignReleaseBundle
        configuration:
          inputResources:
            - name: docker_release_Bundle
          outputResources:
            - name: docker_release_Bundle2
            
      - name: dockerDistribute
        type: DistributeReleaseBundle
        configuration:
          dryRun: false
          inputResources:
            - name: docker_distribution
            - name: docker_release_Bundle2
          integrations: 
            - name: dist             
